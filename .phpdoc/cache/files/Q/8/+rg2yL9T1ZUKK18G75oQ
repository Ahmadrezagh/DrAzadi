1650403463
AwuilbDvXz%3A3fe0a481b37d03b4b79415933f76cd4e-501e077e3fbac36260461a9ccce2b81a
s:25972:"O:33:"phpDocumentor\Reflection\Php\File":12:{s:43:" phpDocumentor\Reflection\Php\File docBlock";N;s:39:" phpDocumentor\Reflection\Php\File hash";s:32:"501e077e3fbac36260461a9ccce2b81a";s:39:" phpDocumentor\Reflection\Php\File name";s:44:"616396e3084a879050d489d3f1c37750b98f2500.php";s:39:" phpDocumentor\Reflection\Php\File path";s:68:"storage/framework/views/616396e3084a879050d489d3f1c37750b98f2500.php";s:41:" phpDocumentor\Reflection\Php\File source";s:18609:"<!DOCTYPE html>
<!--
This is a starter template page. Use this page to start your new project from
scratch. This page gets rid of all links and provides the needed markup only.
-->
<html lang="en">
<head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <meta http-equiv="x-ua-compatible" content="ie=edge">

    <title><?php echo e(setting('name')); ?> <?php if(trim($__env->yieldContent('title'))): ?> | <?php echo $__env->yieldContent('title'); ?><?php endif; ?></title>

    <!-- Font Awesome Icons -->
    <link rel="stylesheet" href="<?php echo e(URL::to('/').'/plugins/fontawesome-free/css/all.min.css'); ?>">

    <!-- Select2 -->
    <link href="https://cdn.jsdelivr.net/npm/select2@4.1.0-beta.1/dist/css/select2.min.css" rel="stylesheet" />
    <!-- Theme style -->
    <link rel="stylesheet" href="<?php echo e(URL::to('/').'/dist/css/adminlte.min.css'); ?>">
    <!-- Google Font: Source Sans Pro -->
    <link href="https://fonts.googleapis.com/css?family=Source+Sans+Pro:300,400,400i,700" rel="stylesheet">
    <!-- Image_uploader -->
    <link type="text/css" rel="stylesheet" href="<?php echo e(URL::to('/')); ?>/image_uploader/image_uploader.min.css">
    <!-- Include this in your blade layout -->
    <script src="https://unpkg.com/sweetalert/dist/sweetalert.min.js"></script>
    <!-- CK Editor -->
    <script src="https://cdn.ckeditor.com/4.15.0/standard/ckeditor.js"></script>

    <!-- Tags input -->

    <link rel="stylesheet" href="//cdn.jsdelivr.net/bootstrap.tagsinput/0.4.2/bootstrap-tagsinput.css" />

    <style>
        .bootstrap-tagsinput {
            width: 100%;
            line-height: 25px;
            display: flex;
            flex-direction: row;
            flex-wrap: wrap;
        }
        .bootstrap-tagsinput .tag{
            background-color: rgb(52, 58, 64);
            padding: 4px;
            margin: 5px;
            border-radius: 7px;
            border: none;
        }
    </style>
</head>
<body class="hold-transition sidebar-mini">
<?php echo $__env->make('sweet::alert', \Illuminate\Support\Arr::except(get_defined_vars(), ['__data', '__path']))->render(); ?>
<div class="wrapper">

    <!-- Navbar -->
    <nav class="main-header navbar navbar-expand navbar-white navbar-light">
        <!-- Left navbar links -->
        <ul class="navbar-nav">
            <li class="nav-item">
                <a class="nav-link" data-widget="pushmenu" href="#" role="button"><i class="fas fa-bars"></i></a>
            </li>
            <li class="nav-item d-none d-sm-inline-block">
                <a href="<?php echo e(route('home')); ?>" class="nav-link">Home</a>
            </li>
            <li class="nav-item d-none d-sm-inline-block">
                <a href="#" class="nav-link">Contact</a>
            </li>
        </ul>

        <!-- SEARCH FORM -->
        <form class="form-inline ml-3">
            <div class="input-group input-group-sm">
                <input class="form-control form-control-navbar" type="search" placeholder="Search" aria-label="Search">
                <div class="input-group-append">
                    <button class="btn btn-navbar" type="submit">
                        <i class="fas fa-search"></i>
                    </button>
                </div>
            </div>
        </form>

        <!-- Right navbar links -->
        <ul class="navbar-nav ml-auto">
            <!-- Messages Dropdown Menu -->
            <li class="nav-item dropdown">
                <a class="nav-link" data-toggle="dropdown" href="#">
                    <i class="far fa-comments"></i>
                    <span class="badge badge-danger navbar-badge">3</span>
                </a>
                <div class="dropdown-menu dropdown-menu-lg dropdown-menu-right">
                    <a href="#" class="dropdown-item">
                        <!-- Message Start -->
                        <div class="media">
                            <img src="<?php echo e(URL::to('/')); ?>/dist/img/user1-128x128.jpg" alt="User Avatar" class="img-size-50 mr-3 img-circle">
                            <div class="media-body">
                                <h3 class="dropdown-item-title">
                                    Brad Diesel
                                    <span class="float-right text-sm text-danger"><i class="fas fa-star"></i></span>
                                </h3>
                                <p class="text-sm">Call me whenever you can...</p>
                                <p class="text-sm text-muted"><i class="far fa-clock mr-1"></i> 4 Hours Ago</p>
                            </div>
                        </div>
                        <!-- Message End -->
                    </a>
                    <div class="dropdown-divider"></div>
                    <a href="#" class="dropdown-item">
                        <!-- Message Start -->
                        <div class="media">
                            <img src="<?php echo e(URL::to('/')); ?>/dist/img/user8-128x128.jpg" alt="User Avatar" class="img-size-50 img-circle mr-3">
                            <div class="media-body">
                                <h3 class="dropdown-item-title">
                                    John Pierce
                                    <span class="float-right text-sm text-muted"><i class="fas fa-star"></i></span>
                                </h3>
                                <p class="text-sm">I got your message bro</p>
                                <p class="text-sm text-muted"><i class="far fa-clock mr-1"></i> 4 Hours Ago</p>
                            </div>
                        </div>
                        <!-- Message End -->
                    </a>
                    <div class="dropdown-divider"></div>
                    <a href="#" class="dropdown-item">
                        <!-- Message Start -->
                        <div class="media">
                            <img src="<?php echo e(URL::to('/')); ?>/dist/img/user3-128x128.jpg" alt="User Avatar" class="img-size-50 img-circle mr-3">
                            <div class="media-body">
                                <h3 class="dropdown-item-title">
                                    Nora Silvester
                                    <span class="float-right text-sm text-warning"><i class="fas fa-star"></i></span>
                                </h3>
                                <p class="text-sm">The subject goes here</p>
                                <p class="text-sm text-muted"><i class="far fa-clock mr-1"></i> 4 Hours Ago</p>
                            </div>
                        </div>
                        <!-- Message End -->
                    </a>
                    <div class="dropdown-divider"></div>
                    <a href="#" class="dropdown-item dropdown-footer">See All Messages</a>
                </div>
            </li>
            <!-- Notifications Dropdown Menu -->
            <li class="nav-item dropdown">
                <a class="nav-link" data-toggle="dropdown" href="#">
                    <i class="far fa-bell"></i>
                    <span class="badge badge-warning navbar-badge">15</span>
                </a>
                <div class="dropdown-menu dropdown-menu-lg dropdown-menu-right">
                    <span class="dropdown-header">15 Notifications</span>
                    <div class="dropdown-divider"></div>
                    <a href="#" class="dropdown-item">
                        <i class="fas fa-envelope mr-2"></i> 4 new messages
                        <span class="float-right text-muted text-sm">3 mins</span>
                    </a>
                    <div class="dropdown-divider"></div>
                    <a href="#" class="dropdown-item">
                        <i class="fas fa-users mr-2"></i> 8 friend requests
                        <span class="float-right text-muted text-sm">12 hours</span>
                    </a>
                    <div class="dropdown-divider"></div>
                    <a href="#" class="dropdown-item">
                        <i class="fas fa-file mr-2"></i> 3 new reports
                        <span class="float-right text-muted text-sm">2 days</span>
                    </a>
                    <div class="dropdown-divider"></div>
                    <a href="#" class="dropdown-item dropdown-footer">See All Notifications</a>
                </div>
            </li>
            <li class="nav-item">
                <a class="nav-link" data-widget="control-sidebar" data-slide="true" href="#" role="button"><i
                        class="fas fa-th-large"></i></a>
            </li>
        </ul>
    </nav>
    <!-- /.navbar -->

    <!-- Main Sidebar Container -->
    <aside class="main-sidebar sidebar-dark-primary elevation-4">
        <!-- Brand Logo -->
        <a href="<?php echo e(route('home')); ?>" class="brand-link">
            <img src="<?php echo e(URL::to('/').setting('logo')); ?>" alt="AdminLTE Logo" class="brand-image img-circle elevation-3"
                 style="opacity: .8">
            <span class="brand-text font-weight-light"><?php echo e(setting('name')); ?></span>
        </a>

        <!-- Sidebar -->
        <div class="sidebar">
            <!-- Sidebar user panel (optional) -->
            <div class="user-panel mt-3 pb-3 mb-3 d-flex">
                <div class="image">
                    <img src="<?php echo e(URL::to('/').Auth::user()->profile()); ?>" class="img-circle elevation-2" alt="User Image">
                </div>
                <div class="info">
                    <a href="#" class="d-block"><?php echo e(Auth::user()->name); ?></a>
                </div>
            </div>

            <!-- Sidebar Menu -->
            <nav class="mt-2">
                <ul class="nav nav-pills nav-sidebar flex-column" data-widget="treeview" role="menu" data-accordion="false">
                    <!-- Add icons to the links using the .nav-icon class
                         with font-awesome or any other icon font library -->

                    <?php if((Auth::user()->isAdmin() && Auth::user()->can('Admin')) || Auth::user()->isSuperAdmin() ): ?>
                    <li class="nav-item has-treeview ">
                        <a href="#" class="nav-link <?php echo $__env->yieldContent('admins'); ?>">
                            <i class="fas fa-user-shield"></i>
                            <p>
                                Admins
                                <i class="right fas fa-angle-left"></i>
                            </p>
                        </a>
                        <ul class="nav nav-treeview">
                            <li class="nav-item">
                                <a href="<?php echo e(route('admin.index')); ?>" class="nav-link <?php echo $__env->yieldContent('admins_list'); ?>">
                                    <p>Admins</p>
                                </a>
                            </li>
                            <li class="nav-item">
                                <a href="<?php echo e(route('roles.index')); ?>" class="nav-link <?php echo $__env->yieldContent('roles'); ?>">
                                    <p>Roles</p>
                                </a>
                            </li>
                        </ul>
                    </li>
                    <?php endif; ?>
                    <?php if((Auth::user()->isAdmin() && Auth::user()->can('Category')) || Auth::user()->isSuperAdmin() ): ?>
                        <li class="nav-item has-treeview ">
                            <a href="#" class="nav-link <?php echo $__env->yieldContent('Categories'); ?>">
                                <i class="fas fa-clipboard-list"></i>
                                <p>
                                    Categories
                                    <i class="right fas fa-angle-left"></i>
                                </p>
                            </a>
                            <ul class="nav nav-treeview">
                                    <li class="nav-item">
                                        <a href="<?php echo e(route('categories.index')); ?>" class="nav-link <?php echo $__env->yieldContent('Category'); ?>">
                                            <p>Category list</p>
                                        </a>
                                    </li>
                            </ul>
                        </li>
                    <?php endif; ?>
                    <?php if((Auth::user()->isAdmin() && Auth::user()->can('User')) || Auth::user()->isSuperAdmin() ): ?>
                        <li class="nav-item has-treeview ">
                            <a href="#" class="nav-link <?php echo $__env->yieldContent('User'); ?>">
                                <i class="fas fa-users"></i>
                                <p>
                                    Users
                                    <i class="right fas fa-angle-left"></i>
                                </p>
                            </a>
                            <ul class="nav nav-treeview">
                                <li class="nav-item">
                                    <a href="<?php echo e(route('users.index')); ?>" class="nav-link <?php echo $__env->yieldContent('Users'); ?>">
                                        <p>Users</p>
                                    </a>
                                </li>
                            </ul>
                        </li>
                    <?php endif; ?>

                    <?php if((Auth::user()->isAdmin() && Auth::user()->can('Setting')) || Auth::user()->isSuperAdmin() ): ?>
                        <li class="nav-item has-treeview ">
                            <a href="#" class="nav-link <?php echo $__env->yieldContent('Setting'); ?>">
                                <i class="fas fa-cogs"></i>
                                <p>
                                    Settings
                                    <i class="right fas fa-angle-left"></i>
                                </p>
                            </a>
                            <ul class="nav nav-treeview">
                                <?php $__currentLoopData = $setting_groups; $__env->addLoop($__currentLoopData); foreach($__currentLoopData as $group): $__env->incrementLoopIndices(); $loop = $__env->getLastLoop(); ?>
                                    <li class="nav-item">
                                        <a href="<?php echo e(route('settings.show',$group->id)); ?>" class="nav-link <?php echo $__env->yieldContent($group->name); ?>">
                                            <p><?php echo e($group->name); ?></p>
                                        </a>
                                    </li>
                                <?php endforeach; $__env->popLoop(); $loop = $__env->getLastLoop(); ?>
                            </ul>
                        </li>
                    <?php endif; ?>
                    <li class="nav-item">
                        <a class="nav-link btn btn-danger" href="<?php echo e(route('logout')); ?>"
                           onclick="event.preventDefault();
                           document.getElementById('logout-form').submit();">
                            <i class="fas fa-sign-out-alt"></i>
                            <p><?php echo e(__('Logout')); ?></p>
                        </a>

                        <form id="logout-form" action="<?php echo e(route('logout')); ?>" method="POST" style="display: none;">
                            <?php echo csrf_field(); ?>
                        </form>







                    </li>
                </ul>
            </nav>
            <!-- /.sidebar-menu -->
        </div>
        <!-- /.sidebar -->
    </aside>

    <?php echo $__env->yieldContent('content'); ?>

    <!-- Control Sidebar -->
    <aside class="control-sidebar control-sidebar-dark">
        <!-- Control sidebar content goes here -->
        <div class="p-3">
            <h5>Title</h5>
            <p>Sidebar content</p>
        </div>
    </aside>
    <!-- /.control-sidebar -->

    <!-- Main Footer -->
    <footer class="main-footer">
        <!-- To the right -->
        <div class="float-right d-none d-sm-inline">
           Design and Develope : <a href="https://ahmadrezaghanbari.ir">A.Ghanbari</a>
        </div>
        <!-- Default to the left -->
        <strong>Copyright &copy; 2020-<?php echo e(Date('Y')); ?> <a href="<?php echo e(setting('url')); ?>"><?php echo e(setting('name')); ?></a>.</strong> All rights reserved.
    </footer>
</div>
<!-- ./wrapper -->

<!-- REQUIRED SCRIPTS -->

<!-- jQuery -->
<script src="<?php echo e(URL::to('/').'/plugins/jquery/jquery.min.js'); ?>"></script>

<!-- Bootstrap 4 -->
<script src="<?php echo e(URL::to('/').'/plugins/bootstrap/js/bootstrap.bundle.min.js'); ?>"></script>

<script src="https://cdn.jsdelivr.net/npm/select2@4.1.0-beta.1/dist/js/select2.min.js"></script>
<!-- AdminLTE App -->
<script src="<?php echo e(URL::to('/').'/dist/js/adminlte.min.js'); ?>"></script>

<!-- jQuery -->
<script src="<?php echo e(URL::to('/').'/plugins/datatables/jquery.dataTables.min.js'); ?>"></script>
<script src="<?php echo e(URL::to('/').'/plugins/datatables-bs4/js/dataTables.bootstrap4.min.js'); ?>"></script>
<script src="<?php echo e(URL::to('/').'/plugins/datatables-responsive/js/dataTables.responsive.min.js'); ?>"></script>
<script src="<?php echo e(URL::to('/').'/plugins/datatables-responsive/js/responsive.bootstrap4.min.js'); ?>"></script>
<script>
    $(function () {
      $("#table").DataTable({
        "responsive": true,
        "autoWidth": false,
      });
    });
    $(function () {
    $('[data-toggle="tooltip"]').tooltip()
  })

    $(document).ready(function() {
        $('.js-example-basic-single').select2();
    });
  </script>

<script src="<?php echo e(URL::to('/')); ?>/dist/js/demo.js"></script>
<!-- image uploader -->
<script type="text/javascript" src="<?php echo e(URL::to('/')); ?>/image_uploader/image_uploader.min.js"></script>
<!-- Tags input -->
<script src="<?php echo e(URL::to('/')); ?>/tagsinput/dist/bootstrap-tagsinput.min.js"></script>
<script src="<?php echo e(URL::to('/')); ?>/tagsinput/dist/bootstrap-tagsinput/bootstrap-tagsinput-angular.min.js"></script>

<!-- Page script -->
<?php echo $__env->yieldContent('js'); ?>
</body>
</html>
<?php /**PATH /Users/ahmadreza/Desktop/AdminPanelLaravel8/resources/views/layouts/panel.blade.php ENDPATH**/ ?>";s:45:" phpDocumentor\Reflection\Php\File namespaces";a:0:{}s:43:" phpDocumentor\Reflection\Php\File includes";a:0:{}s:44:" phpDocumentor\Reflection\Php\File functions";a:0:{}s:44:" phpDocumentor\Reflection\Php\File constants";a:0:{}s:42:" phpDocumentor\Reflection\Php\File classes";a:0:{}s:45:" phpDocumentor\Reflection\Php\File interfaces";a:0:{}s:41:" phpDocumentor\Reflection\Php\File traits";a:0:{}}";