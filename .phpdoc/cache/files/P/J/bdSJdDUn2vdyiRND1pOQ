1650403463
AwuilbDvXz%3A68b88ec8d48fa9896d40009d5ce194b0-084a00f3f95bbc91ed732247652c020e
s:29944:"TzozMzoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlIjoxMjp7czo0MzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcRmlsZQBkb2NCbG9jayI7TjtzOjM5OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlAGhhc2giO3M6MzI6IjA4NGEwMGYzZjk1YmJjOTFlZDczMjI0NzY1MmMwMjBlIjtzOjM5OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlAG5hbWUiO3M6MTU6InBhbmVsLmJsYWRlLnBocCI7czozOToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcRmlsZQBwYXRoIjtzOjM5OiJyZXNvdXJjZXMvdmlld3MvbGF5b3V0cy9wYW5lbC5ibGFkZS5waHAiO3M6NDE6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEZpbGUAc291cmNlIjtzOjIxNjQ0OiI8IURPQ1RZUEUgaHRtbD4KPGh0bWw+CjxoZWFkPgogICAgPG1ldGEgY2hhcnNldD0idXRmLTgiPgogICAgPG1ldGEgaHR0cC1lcXVpdj0iWC1VQS1Db21wYXRpYmxlIiBjb250ZW50PSJJRT1lZGdlIj4KICAgIDx0aXRsZT57e3NldHRpbmcoJ25hbWUnKX19IEBpZiAodHJpbSgkX19lbnYtPnlpZWxkQ29udGVudCgndGl0bGUnKSkpIHwgQHlpZWxkKCd0aXRsZScpQGVuZGlmPC90aXRsZT4KICAgIDwhLS0gVGVsbCB0aGUgYnJvd3NlciB0byBiZSByZXNwb25zaXZlIHRvIHNjcmVlbiB3aWR0aCAtLT4KICAgIDxtZXRhIG5hbWU9InZpZXdwb3J0IiBjb250ZW50PSJ3aWR0aD1kZXZpY2Utd2lkdGgsIGluaXRpYWwtc2NhbGU9MSI+CiAgICA8IS0tIEZvbnQgQXdlc29tZSAtLT4KICAgIDxsaW5rIHJlbD0ic3R5bGVzaGVldCIgaHJlZj0ie3tVUkw6OnRvKCcvJyl9fS9wbHVnaW5zL2ZvbnRhd2Vzb21lLWZyZWUvY3NzL2FsbC5taW4uY3NzIj4KICAgIDwhLS0gSW9uaWNvbnMgLS0+CiAgICA8bGluayByZWw9InN0eWxlc2hlZXQiIGhyZWY9Imh0dHBzOi8vY29kZS5pb25pY2ZyYW1ld29yay5jb20vaW9uaWNvbnMvMi4wLjEvY3NzL2lvbmljb25zLm1pbi5jc3MiPgogICAgPCEtLSBUZW1wdXNkb21pbnVzIEJib290c3RyYXAgNCAtLT4KICAgIDxsaW5rIHJlbD0ic3R5bGVzaGVldCIgaHJlZj0ie3tVUkw6OnRvKCcvJyl9fS9wbHVnaW5zL3RlbXB1c2RvbWludXMtYm9vdHN0cmFwLTQvY3NzL3RlbXB1c2RvbWludXMtYm9vdHN0cmFwLTQubWluLmNzcyI+CiAgICA8IS0tIGlDaGVjayAtLT4KICAgIDxsaW5rIHJlbD0ic3R5bGVzaGVldCIgaHJlZj0ie3tVUkw6OnRvKCcvJyl9fS9wbHVnaW5zL2ljaGVjay1ib290c3RyYXAvaWNoZWNrLWJvb3RzdHJhcC5taW4uY3NzIj4KICAgIDwhLS0gVGhlbWUgc3R5bGUgLS0+CiAgICA8bGluayByZWw9InN0eWxlc2hlZXQiIGhyZWY9Int7VVJMOjp0bygnLycpfX0vZGlzdC9jc3MvYWRtaW5sdGUubWluLmNzcyI+CiAgICA8IS0tIG92ZXJsYXlTY3JvbGxiYXJzIC0tPgogICAgPGxpbmsgcmVsPSJzdHlsZXNoZWV0IiBocmVmPSJ7e1VSTDo6dG8oJy8nKX19L3BsdWdpbnMvb3ZlcmxheVNjcm9sbGJhcnMvY3NzL092ZXJsYXlTY3JvbGxiYXJzLm1pbi5jc3MiPgogICAgPCEtLSBEYXRlcmFuZ2UgcGlja2VyIC0tPgogICAgPGxpbmsgcmVsPSJzdHlsZXNoZWV0IiBocmVmPSJ7e1VSTDo6dG8oJy8nKX19L3BsdWdpbnMvZGF0ZXJhbmdlcGlja2VyL2RhdGVyYW5nZXBpY2tlci5jc3MiPgogICAgPCEtLSBzdW1tZXJub3RlIC0tPgogICAgPGxpbmsgcmVsPSJzdHlsZXNoZWV0IiBocmVmPSJ7e1VSTDo6dG8oJy8nKX19L3BsdWdpbnMvc3VtbWVybm90ZS9zdW1tZXJub3RlLWJzNC5jc3MiPgogICAgPCEtLSBHb29nbGUgRm9udDogU291cmNlIFNhbnMgUHJvIC0tPgogICAgPGxpbmsgaHJlZj0iaHR0cHM6Ly9mb250cy5nb29nbGVhcGlzLmNvbS9jc3M/ZmFtaWx5PVNvdXJjZStTYW5zK1BybzozMDAsNDAwLDQwMGksNzAwIiByZWw9InN0eWxlc2hlZXQiPgogICAgPCEtLSBCb290c3RyYXAgNCBSVEwgLS0+CiAgICA8bGluayByZWw9InN0eWxlc2hlZXQiIGhyZWY9Imh0dHBzOi8vY2RuLnJ0bGNzcy5jb20vYm9vdHN0cmFwL3Y0LjIuMS9jc3MvYm9vdHN0cmFwLm1pbi5jc3MiPgogICAgPCEtLSBDdXN0b20gc3R5bGUgZm9yIFJUTCAtLT4KICAgIDxsaW5rIHJlbD0ic3R5bGVzaGVldCIgaHJlZj0ie3tVUkw6OnRvKCcvJyl9fS9kaXN0L2Nzcy9jdXN0b20uY3NzIj4KICAgIDxzdHlsZT4KICAgICAgICBAZm9udC1mYWNlIHsKICAgICAgICAgICAgZm9udC1mYW1pbHk6IElyYW5ZZWthbjsKICAgICAgICAgICAgc3JjOiB1cmwoL2ZvbnRzL3R0Zi9pcmFueWVrYW53ZWJib2xkZmFudW0udHRmKTsKICAgICAgICB9CiAgICA8L3N0eWxlPgogICAgPHNjcmlwdCBzcmM9Imh0dHBzOi8vY2RuLmNrZWRpdG9yLmNvbS80LjE1LjAvZnVsbC9ja2VkaXRvci5qcyI+PC9zY3JpcHQ+CiAgICA8bGluayBocmVmPSJodHRwczovL2Nkbi5qc2RlbGl2ci5uZXQvbnBtL3NlbGVjdDJANC4xLjAtcmMuMC9kaXN0L2Nzcy9zZWxlY3QyLm1pbi5jc3MiIHJlbD0ic3R5bGVzaGVldCIgLz4KPC9oZWFkPgo8Ym9keSBzdHlsZT0iZm9udC1mYW1pbHk6IElyYW5ZZWthbiIgY2xhc3M9ImhvbGQtdHJhbnNpdGlvbiBzaWRlYmFyLW1pbmkgbGF5b3V0LWZpeGVkIj4KPGRpdiBjbGFzcz0id3JhcHBlciI+CgogICAgPCEtLSBOYXZiYXIgLS0+CiAgICA8bmF2IGNsYXNzPSJtYWluLWhlYWRlciBuYXZiYXIgbmF2YmFyLWV4cGFuZCBuYXZiYXItd2hpdGUgbmF2YmFyLWxpZ2h0Ij4KICAgICAgICA8IS0tIExlZnQgbmF2YmFyIGxpbmtzIC0tPgogICAgICAgIDx1bCBjbGFzcz0ibmF2YmFyLW5hdiI+Cnt7LS0gICAgICAgICAgICA8bGkgY2xhc3M9Im5hdi1pdGVtIj4tLX19Cnt7LS0gICAgICAgICAgICAgICAgPGEgY2xhc3M9Im5hdi1saW5rIiBkYXRhLXdpZGdldD0icHVzaG1lbnUiIGhyZWY9IiMiPjxpIGNsYXNzPSJmYXMgZmEtYmFycyI+PC9pPjwvYT4tLX19Cnt7LS0gICAgICAgICAgICA8L2xpPi0tfX0Ke3stLSAgICAgICAgICAgIDxsaSBjbGFzcz0ibmF2LWl0ZW0gZC1ub25lIGQtc20taW5saW5lLWJsb2NrIj4tLX19Cnt7LS0gICAgICAgICAgICAgICAgPGEgaHJlZj0iaW5kZXgzLmh0bWwiIGNsYXNzPSJuYXYtbGluayI+SG9tZTwvYT4tLX19Cnt7LS0gICAgICAgICAgICA8L2xpPi0tfX0Ke3stLSAgICAgICAgICAgIDxsaSBjbGFzcz0ibmF2LWl0ZW0gZC1ub25lIGQtc20taW5saW5lLWJsb2NrIj4tLX19Cnt7LS0gICAgICAgICAgICAgICAgPGEgaHJlZj0iIyIgY2xhc3M9Im5hdi1saW5rIj5Db250YWN0PC9hPi0tfX0Ke3stLSAgICAgICAgICAgIDwvbGk+LS19fQogICAgICAgIDwvdWw+CgogICAgICAgIDwhLS0gU0VBUkNIIEZPUk0gLS0+CiAgICAgICAgPGZvcm0gY2xhc3M9ImZvcm0taW5saW5lIG1sLTMiPgp7ey0tICAgICAgICAgICAgPGRpdiBjbGFzcz0iaW5wdXQtZ3JvdXAgaW5wdXQtZ3JvdXAtc20iPi0tfX0Ke3stLSAgICAgICAgICAgICAgICA8aW5wdXQgY2xhc3M9ImZvcm0tY29udHJvbCBmb3JtLWNvbnRyb2wtbmF2YmFyIiB0eXBlPSJzZWFyY2giIHBsYWNlaG9sZGVyPSJTZWFyY2giIGFyaWEtbGFiZWw9IlNlYXJjaCI+LS19fQp7ey0tICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImlucHV0LWdyb3VwLWFwcGVuZCI+LS19fQp7ey0tICAgICAgICAgICAgICAgICAgICA8YnV0dG9uIGNsYXNzPSJidG4gYnRuLW5hdmJhciIgdHlwZT0ic3VibWl0Ij4tLX19Cnt7LS0gICAgICAgICAgICAgICAgICAgICAgICA8aSBjbGFzcz0iZmFzIGZhLXNlYXJjaCI+PC9pPi0tfX0Ke3stLSAgICAgICAgICAgICAgICAgICAgPC9idXR0b24+LS19fQp7ey0tICAgICAgICAgICAgICAgIDwvZGl2Pi0tfX0Ke3stLSAgICAgICAgICAgIDwvZGl2Pi0tfX0KICAgICAgICA8L2Zvcm0+CgogICAgICAgIDwhLS0gUmlnaHQgbmF2YmFyIGxpbmtzIC0tPgogICAgICAgIDx1bCBjbGFzcz0ibmF2YmFyLW5hdiBtci1hdXRvLW5hdmJhdiI+CiAgICAgICAgICAgIDwhLS0gTWVzc2FnZXMgRHJvcGRvd24gTWVudSAtLT4KICAgICAgICAgICAgPGxpIGNsYXNzPSJuYXYtaXRlbSBkcm9wZG93biI+Cnt7LS0gICAgICAgICAgICAgICAgPGEgY2xhc3M9Im5hdi1saW5rIiBkYXRhLXRvZ2dsZT0iZHJvcGRvd24iIGhyZWY9IiMiPi0tfX0Ke3stLSAgICAgICAgICAgICAgICAgICAgPGkgY2xhc3M9ImZhciBmYS1jb21tZW50cyI+PC9pPi0tfX0Ke3stLSAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9ImJhZGdlIGJhZGdlLWRhbmdlciBuYXZiYXItYmFkZ2UiPjM8L3NwYW4+LS19fQp7ey0tICAgICAgICAgICAgICAgIDwvYT4tLX19Cnt7LS0gICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iZHJvcGRvd24tbWVudSBkcm9wZG93bi1tZW51LWxnIGRyb3Bkb3duLW1lbnUtcmlnaHQiPi0tfX0Ke3stLSAgICAgICAgICAgICAgICAgICAgPGEgaHJlZj0iIyIgY2xhc3M9ImRyb3Bkb3duLWl0ZW0iPi0tfX0Ke3stLSAgICAgICAgICAgICAgICAgICAgICAgIDwhLS0gTWVzc2FnZSBTdGFydCAtLT4tLX19Cnt7LS0gICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJtZWRpYSI+LS19fQp7ey0tICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxpbWcgc3JjPSJ7e1VSTDo6dG8oJy8nKX19L2Rpc3QvaW1nL3VzZXIxLTEyOHgxMjguanBnIiBhbHQ9IlVzZXIgQXZhdGFyIiBjbGFzcz0iaW1nLXNpemUtNTAgbXItMyBpbWctY2lyY2xlIj4tLX19Cnt7LS0gICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0ibWVkaWEtYm9keSI+LS19fQp7ey0tICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aDMgY2xhc3M9ImRyb3Bkb3duLWl0ZW0tdGl0bGUiPi0tfX0Ke3stLSAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIEJyYWQgRGllc2VsLS19fQp7ey0tICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9ImZsb2F0LXJpZ2h0IHRleHQtc20gdGV4dC1kYW5nZXIiPjxpIGNsYXNzPSJmYXMgZmEtc3RhciI+PC9pPjwvc3Bhbj4tLX19Cnt7LS0gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvaDM+LS19fQp7ey0tICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8cCBjbGFzcz0idGV4dC1zbSI+Q2FsbCBtZSB3aGVuZXZlciB5b3UgY2FuLi4uPC9wPi0tfX0Ke3stLSAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHAgY2xhc3M9InRleHQtc20gdGV4dC1tdXRlZCI+PGkgY2xhc3M9ImZhciBmYS1jbG9jayBtci0xIj48L2k+IDQgSG91cnMgQWdvPC9wPi0tfX0Ke3stLSAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4tLX19Cnt7LS0gICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4tLX19Cnt7LS0gICAgICAgICAgICAgICAgICAgICAgICA8IS0tIE1lc3NhZ2UgRW5kIC0tPi0tfX0Ke3stLSAgICAgICAgICAgICAgICAgICAgPC9hPi0tfX0Ke3stLSAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iZHJvcGRvd24tZGl2aWRlciI+PC9kaXY+LS19fQp7ey0tICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSIjIiBjbGFzcz0iZHJvcGRvd24taXRlbSI+LS19fQp7ey0tICAgICAgICAgICAgICAgICAgICAgICAgPCEtLSBNZXNzYWdlIFN0YXJ0IC0tPi0tfX0Ke3stLSAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9Im1lZGlhIj4tLX19Cnt7LS0gICAgICAgICAgICAgICAgICAgICAgICAgICAgPGltZyBzcmM9Int7VVJMOjp0bygnLycpfX0vZGlzdC9pbWcvdXNlcjgtMTI4eDEyOC5qcGciIGFsdD0iVXNlciBBdmF0YXIiIGNsYXNzPSJpbWctc2l6ZS01MCBpbWctY2lyY2xlIG1yLTMiPi0tfX0Ke3stLSAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJtZWRpYS1ib2R5Ij4tLX19Cnt7LS0gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxoMyBjbGFzcz0iZHJvcGRvd24taXRlbS10aXRsZSI+LS19fQp7ey0tICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgSm9obiBQaWVyY2UtLX19Cnt7LS0gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0iZmxvYXQtcmlnaHQgdGV4dC1zbSB0ZXh0LW11dGVkIj48aSBjbGFzcz0iZmFzIGZhLXN0YXIiPjwvaT48L3NwYW4+LS19fQp7ey0tICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2gzPi0tfX0Ke3stLSAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHAgY2xhc3M9InRleHQtc20iPkkgZ290IHlvdXIgbWVzc2FnZSBicm88L3A+LS19fQp7ey0tICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8cCBjbGFzcz0idGV4dC1zbSB0ZXh0LW11dGVkIj48aSBjbGFzcz0iZmFyIGZhLWNsb2NrIG1yLTEiPjwvaT4gNCBIb3VycyBBZ288L3A+LS19fQp7ey0tICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2Pi0tfX0Ke3stLSAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2Pi0tfX0Ke3stLSAgICAgICAgICAgICAgICAgICAgICAgIDwhLS0gTWVzc2FnZSBFbmQgLS0+LS19fQp7ey0tICAgICAgICAgICAgICAgICAgICA8L2E+LS19fQp7ey0tICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJkcm9wZG93bi1kaXZpZGVyIj48L2Rpdj4tLX19Cnt7LS0gICAgICAgICAgICAgICAgICAgIDxhIGhyZWY9IiMiIGNsYXNzPSJkcm9wZG93bi1pdGVtIj4tLX19Cnt7LS0gICAgICAgICAgICAgICAgICAgICAgICA8IS0tIE1lc3NhZ2UgU3RhcnQgLS0+LS19fQp7ey0tICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0ibWVkaWEiPi0tfX0Ke3stLSAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aW1nIHNyYz0ie3tVUkw6OnRvKCcvJyl9fS9kaXN0L2ltZy91c2VyMy0xMjh4MTI4LmpwZyIgYWx0PSJVc2VyIEF2YXRhciIgY2xhc3M9ImltZy1zaXplLTUwIGltZy1jaXJjbGUgbXItMyI+LS19fQp7ey0tICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9Im1lZGlhLWJvZHkiPi0tfX0Ke3stLSAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGgzIGNsYXNzPSJkcm9wZG93bi1pdGVtLXRpdGxlIj4tLX19Cnt7LS0gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBOb3JhIFNpbHZlc3Rlci0tfX0Ke3stLSAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJmbG9hdC1yaWdodCB0ZXh0LXNtIHRleHQtd2FybmluZyI+PGkgY2xhc3M9ImZhcyBmYS1zdGFyIj48L2k+PC9zcGFuPi0tfX0Ke3stLSAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9oMz4tLX19Cnt7LS0gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxwIGNsYXNzPSJ0ZXh0LXNtIj5UaGUgc3ViamVjdCBnb2VzIGhlcmU8L3A+LS19fQp7ey0tICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8cCBjbGFzcz0idGV4dC1zbSB0ZXh0LW11dGVkIj48aSBjbGFzcz0iZmFyIGZhLWNsb2NrIG1yLTEiPjwvaT4gNCBIb3VycyBBZ288L3A+LS19fQp7ey0tICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2Pi0tfX0Ke3stLSAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2Pi0tfX0Ke3stLSAgICAgICAgICAgICAgICAgICAgICAgIDwhLS0gTWVzc2FnZSBFbmQgLS0+LS19fQp7ey0tICAgICAgICAgICAgICAgICAgICA8L2E+LS19fQp7ey0tICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJkcm9wZG93bi1kaXZpZGVyIj48L2Rpdj4tLX19Cnt7LS0gICAgICAgICAgICAgICAgICAgIDxhIGhyZWY9IiMiIGNsYXNzPSJkcm9wZG93bi1pdGVtIGRyb3Bkb3duLWZvb3RlciI+U2VlIEFsbCBNZXNzYWdlczwvYT4tLX19Cnt7LS0gICAgICAgICAgICAgICAgPC9kaXY+LS19fQogICAgICAgICAgICA8L2xpPgogICAgICAgICAgICA8IS0tIE5vdGlmaWNhdGlvbnMgRHJvcGRvd24gTWVudSAtLT4KICAgICAgICAgICAgPGxpIGNsYXNzPSJuYXYtaXRlbSBkcm9wZG93biI+CiAgICAgICAgICAgICAgICA8YSBjbGFzcz0ibmF2LWxpbmsiIGRhdGEtdG9nZ2xlPSJkcm9wZG93biIgaHJlZj0iIyI+Cnt7LS0gICAgICAgICAgICAgICAgICAgIDxpIGNsYXNzPSJmYXIgZmEtYmVsbCI+PC9pPi0tfX0Ke3stLSAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9ImJhZGdlIGJhZGdlLXdhcm5pbmcgbmF2YmFyLWJhZGdlIj4xNTwvc3Bhbj4tLX19CiAgICAgICAgICAgICAgICA8L2E+CiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJkcm9wZG93bi1tZW51IGRyb3Bkb3duLW1lbnUtbGcgZHJvcGRvd24tbWVudS1yaWdodCI+CiAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9ImRyb3Bkb3duLWl0ZW0gZHJvcGRvd24taGVhZGVyIj4xNSBOb3RpZmljYXRpb25zPC9zcGFuPgogICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImRyb3Bkb3duLWRpdmlkZXIiPjwvZGl2PgogICAgICAgICAgICAgICAgICAgIDxhIGhyZWY9IiMiIGNsYXNzPSJkcm9wZG93bi1pdGVtIj4KICAgICAgICAgICAgICAgICAgICAgICAgPGkgY2xhc3M9ImZhcyBmYS1lbnZlbG9wZSBtci0yIj48L2k+IDQgbmV3IG1lc3NhZ2VzCiAgICAgICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJmbG9hdC1yaWdodCB0ZXh0LW11dGVkIHRleHQtc20iPjMgbWluczwvc3Bhbj4KICAgICAgICAgICAgICAgICAgICA8L2E+CiAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iZHJvcGRvd24tZGl2aWRlciI+PC9kaXY+CiAgICAgICAgICAgICAgICAgICAgPGEgaHJlZj0iIyIgY2xhc3M9ImRyb3Bkb3duLWl0ZW0iPgogICAgICAgICAgICAgICAgICAgICAgICA8aSBjbGFzcz0iZmFzIGZhLXVzZXJzIG1yLTIiPjwvaT4gOCBmcmllbmQgcmVxdWVzdHMKICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9ImZsb2F0LXJpZ2h0IHRleHQtbXV0ZWQgdGV4dC1zbSI+MTIgaG91cnM8L3NwYW4+CiAgICAgICAgICAgICAgICAgICAgPC9hPgogICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImRyb3Bkb3duLWRpdmlkZXIiPjwvZGl2PgogICAgICAgICAgICAgICAgICAgIDxhIGhyZWY9IiMiIGNsYXNzPSJkcm9wZG93bi1pdGVtIj4KICAgICAgICAgICAgICAgICAgICAgICAgPGkgY2xhc3M9ImZhcyBmYS1maWxlIG1yLTIiPjwvaT4gMyBuZXcgcmVwb3J0cwogICAgICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0iZmxvYXQtcmlnaHQgdGV4dC1tdXRlZCB0ZXh0LXNtIj4yIGRheXM8L3NwYW4+CiAgICAgICAgICAgICAgICAgICAgPC9hPgogICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImRyb3Bkb3duLWRpdmlkZXIiPjwvZGl2PgogICAgICAgICAgICAgICAgICAgIDxhIGhyZWY9IiMiIGNsYXNzPSJkcm9wZG93bi1pdGVtIGRyb3Bkb3duLWZvb3RlciI+U2VlIEFsbCBOb3RpZmljYXRpb25zPC9hPgogICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgIDwvbGk+CiAgICAgICAgICAgIDxsaSBjbGFzcz0ibmF2LWl0ZW0iPgp7ey0tICAgICAgICAgICAgICAgIDxhIGNsYXNzPSJuYXYtbGluayIgZGF0YS13aWRnZXQ9ImNvbnRyb2wtc2lkZWJhciIgZGF0YS1zbGlkZT0idHJ1ZSIgaHJlZj0iIyI+LS19fQp7ey0tICAgICAgICAgICAgICAgICAgICA8aSBjbGFzcz0iZmFzIGZhLXRoLWxhcmdlIj48L2k+LS19fQp7ey0tICAgICAgICAgICAgICAgIDwvYT4tLX19CiAgICAgICAgICAgIDwvbGk+CiAgICAgICAgPC91bD4KICAgIDwvbmF2PgogICAgPCEtLSAvLm5hdmJhciAtLT4KCiAgICA8IS0tIE1haW4gU2lkZWJhciBDb250YWluZXIgLS0+CiAgICA8YXNpZGUgY2xhc3M9Im1haW4tc2lkZWJhciBzaWRlYmFyLWRhcmstcHJpbWFyeSBlbGV2YXRpb24tNCI+CiAgICAgICAgPCEtLSBTaWRlYmFyIC0tPgogICAgICAgIDxkaXYgY2xhc3M9InNpZGViYXIiPgogICAgICAgICAgICA8IS0tIFNpZGViYXIgdXNlciBwYW5lbCAob3B0aW9uYWwpIC0tPgogICAgICAgICAgICA8ZGl2IGNsYXNzPSJ1c2VyLXBhbmVsIG10LTMgcGItMyBtYi0zIGQtZmxleCI+CiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJpbWFnZSI+CiAgICAgICAgICAgICAgICAgICAgPGltZyBzcmM9Int7VVJMOjp0bygnLycpLkF1dGg6OnVzZXIoKS0+cHJvZmlsZSgpfX0iIGNsYXNzPSJpbWctY2lyY2xlIGVsZXZhdGlvbi0yIiBhbHQ9IlVzZXIgSW1hZ2UiPgogICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJpbmZvIj4KICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSIjIiBjbGFzcz0iZC1ibG9jayI+e3tBdXRoOjp1c2VyKCktPm5hbWV9fTwvYT4KICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICA8L2Rpdj4KCiAgICAgICAgICAgIDwhLS0gU2lkZWJhciBNZW51IC0tPgogICAgICAgICAgICA8bmF2IGNsYXNzPSJtdC0yIj4KICAgICAgICAgICAgICAgIDx1bCBjbGFzcz0ibmF2IG5hdi1waWxscyBuYXYtc2lkZWJhciBmbGV4LWNvbHVtbiIgZGF0YS13aWRnZXQ9InRyZWV2aWV3IiByb2xlPSJtZW51IiBkYXRhLWFjY29yZGlvbj0iZmFsc2UiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGxpIGNsYXNzPSJuYXYtaXRlbSI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGEgaHJlZj0ie3tyb3V0ZSgnaG9tZScpfX0iIGNsYXNzPSJuYXYtbGluayBAeWllbGQoJ2hvbWUnKSI+CgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aSBjbGFzcz0iZmFzIGZhLWhvbWUiPjwvaT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHA+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICDYrtin2YbZhwogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3A+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9hPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9saT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIEBpZiAoKEF1dGg6OnVzZXIoKS0+aXNBZG1pbigpICYmIEF1dGg6OnVzZXIoKS0+Y2FuKCdBZG1pbicpKSB8fCBBdXRoOjp1c2VyKCktPmlzU3VwZXJBZG1pbigpICkKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxsaSBjbGFzcz0ibmF2LWl0ZW0gaGFzLXRyZWV2aWV3ICI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGEgaHJlZj0iIyIgY2xhc3M9Im5hdi1saW5rIEB5aWVsZCgnYWRtaW5zJykiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aSBjbGFzcz0iZmFzIGZhLXVzZXItc2hpZWxkIj48L2k+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxwPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg2YXYr9uM2LHbjNiqCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aSBjbGFzcz0icmlnaHQgZmFzIGZhLWFuZ2xlLWxlZnQiPjwvaT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9wPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvYT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dWwgY2xhc3M9Im5hdiBuYXYtdHJlZXZpZXciPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8bGkgY2xhc3M9Im5hdi1pdGVtIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxhIGhyZWY9Int7cm91dGUoJ2FkbWluLmluZGV4Jyl9fSIgY2xhc3M9Im5hdi1saW5rIEB5aWVsZCgnYWRtaW5zX2xpc3QnKSI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHA+2YXYr9uM2LEg2YfYpzwvcD4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvYT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9saT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGxpIGNsYXNzPSJuYXYtaXRlbSI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSJ7e3JvdXRlKCdyb2xlcy5pbmRleCcpfX0iIGNsYXNzPSJuYXYtbGluayBAeWllbGQoJ3JvbGVzJykiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxwPtmG2YLYtCDZh9inPC9wPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9hPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2xpPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvdWw+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2xpPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgQGVuZGlmCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBAaWYgKChBdXRoOjp1c2VyKCktPmlzQWRtaW4oKSAmJiBBdXRoOjp1c2VyKCktPmNhbignRG9jdW1lbnRzJykpIHx8IEF1dGg6OnVzZXIoKS0+aXNTdXBlckFkbWluKCkgKQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxsaSBjbGFzcz0ibmF2LWl0ZW0gaGFzLXRyZWV2aWV3ICI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxhIGhyZWY9IiMiIGNsYXNzPSJuYXYtbGluayBAeWllbGQoJ0RvY3VtZW50cycpIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxpIGNsYXNzPSJmYXMgZmEtY2xpcGJvYXJkLWxpc3QiPjwvaT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxwPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgINin2LfZhNin2LnYp9iqINin2LPYqtiu2LHYp9isINi02K/ZhwogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxpIGNsYXNzPSJyaWdodCBmYXMgZmEtYW5nbGUtbGVmdCI+PC9pPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9wPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2E+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx1bCBjbGFzcz0ibmF2IG5hdi10cmVldmlldyI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGxpIGNsYXNzPSJuYXYtaXRlbSI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxhIGhyZWY9Int7cm91dGUoJ2RvY3VtZW50cy5pbmRleCcpfX0iIGNsYXNzPSJuYXYtbGluayBAeWllbGQoJ0RvY3VtZW50JykiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHA+2K/Yp9qp24zZiNmF2YbYqiDZh9inPC9wPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2E+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9saT4KCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvdWw+CgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvbGk+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBAZW5kaWYKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIEBpZiAoKEF1dGg6OnVzZXIoKS0+aXNBZG1pbigpICYmIEF1dGg6OnVzZXIoKS0+Y2FuKCdVc2VyJykpIHx8IEF1dGg6OnVzZXIoKS0+aXNTdXBlckFkbWluKCkgKQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxsaSBjbGFzcz0ibmF2LWl0ZW0gaGFzLXRyZWV2aWV3ICI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxhIGhyZWY9IiMiIGNsYXNzPSJuYXYtbGluayBAeWllbGQoJ1VzZXInKSI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aSBjbGFzcz0iZmFzIGZhLXVzZXJzIj48L2k+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8cD4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICDZhdiv24zYsduM2Kog2qnYp9ix2KjYsdin2YYKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aSBjbGFzcz0icmlnaHQgZmFzIGZhLWFuZ2xlLWxlZnQiPjwvaT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvcD4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9hPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dWwgY2xhc3M9Im5hdiBuYXYtdHJlZXZpZXciPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGxpIGNsYXNzPSJuYXYtaXRlbSI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGEgaHJlZj0ie3tyb3V0ZSgndXNlcnMuaW5kZXgnKX19IiBjbGFzcz0ibmF2LWxpbmsgQHlpZWxkKCdVc2VycycpIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHA+2qnYp9ix2KjYsdin2YY8L3A+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9hPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9saT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxsaSBjbGFzcz0ibmF2LWl0ZW0iPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxhIGhyZWY9Int7cm91dGUoJ3VzZXJSb2xlcy5pbmRleCcpfX0iIGNsYXNzPSJuYXYtbGluayBAeWllbGQoJ3VzZXJSb2xlcycpIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHA+2YbZgti0INmH2Kc8L3A+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9hPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9saT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC91bD4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2xpPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgQGVuZGlmCgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgQGlmICgoQXV0aDo6dXNlcigpLT5pc0FkbWluKCkgJiYgQXV0aDo6dXNlcigpLT5jYW4oJ1NldHRpbmcnKSkgfHwgQXV0aDo6dXNlcigpLT5pc1N1cGVyQWRtaW4oKSApCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGxpIGNsYXNzPSJuYXYtaXRlbSBoYXMtdHJlZXZpZXcgIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGEgaHJlZj0iIyIgY2xhc3M9Im5hdi1saW5rIEB5aWVsZCgnU2V0dGluZycpIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxpIGNsYXNzPSJmYXMgZmEtY29ncyI+PC9pPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHA+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg2KrZhti424zZhdin2KoKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aSBjbGFzcz0icmlnaHQgZmFzIGZhLWFuZ2xlLWxlZnQiPjwvaT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvcD4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9hPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dWwgY2xhc3M9Im5hdiBuYXYtdHJlZXZpZXciPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgQGZvcmVhY2goJHNldHRpbmdfZ3JvdXBzIGFzICRncm91cCkKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8bGkgY2xhc3M9Im5hdi1pdGVtIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGEgaHJlZj0ie3tyb3V0ZSgnc2V0dGluZ3Muc2hvdycsJGdyb3VwLT5pZCl9fSIgY2xhc3M9Im5hdi1saW5rIEB5aWVsZCgkZ3JvdXAtPm5hbWUpIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxwPnt7JGdyb3VwLT5uYW1lfX08L3A+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvYT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2xpPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgQGVuZGZvcmVhY2gKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC91bD4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2xpPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgQGVuZGlmCiAgICAgICAgICAgICAgICAgICAgQGlmICgoQXV0aDo6dXNlcigpLT5pc0FkbWluKCkgJiYgQXV0aDo6dXNlcigpLT5jYW4oJ0NvbnRlbnRVcGRhdGUnKSkgfHwgQXV0aDo6dXNlcigpLT5pc1N1cGVyQWRtaW4oKSApCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8bGkgY2xhc3M9Im5hdi1pdGVtIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSJ7e3VybCgnL2FwaS9jcm9uL2ZldGNoL2NvbnRlbnQvJyl9fSIgY2xhc3M9Im5hdi1saW5rIj4KCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxpIGNsYXNzPSJmYXMgZmEtZmlsZS11cGxvYWQiPjwvaT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHA+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICDYqtqp2YXbjNmEINin2LfZhNin2LnYp9iqCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvcD4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2E+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2xpPgogICAgICAgICAgICAgICAgICAgIEBlbmRpZgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGxpIGNsYXNzPSJuYXYtaXRlbSI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGEgY2xhc3M9Im5hdi1saW5rIGJ0biBidG4tZGFuZ2VyIiBocmVmPSJ7eyByb3V0ZSgnbG9nb3V0JykgfX0iCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgb25jbGljaz0iZXZlbnQucHJldmVudERlZmF1bHQoKTsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnbG9nb3V0LWZvcm0nKS5zdWJtaXQoKTsiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aSBjbGFzcz0iZmFzIGZhLXNpZ24tb3V0LWFsdCI+PC9pPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8cD7Yrtix2YjYrDwvcD4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2E+CgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxmb3JtIGlkPSJsb2dvdXQtZm9ybSIgYWN0aW9uPSJ7eyByb3V0ZSgnbG9nb3V0JykgfX0iIG1ldGhvZD0iUE9TVCIgc3R5bGU9ImRpc3BsYXk6IG5vbmU7Ij4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgQGNzcmYKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Zvcm0+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2xpPgoKICAgICAgICAgICAgICAgIDwvdWw+CiAgICAgICAgICAgIDwvbmF2PgogICAgICAgICAgICA8IS0tIC8uc2lkZWJhci1tZW51IC0tPgogICAgICAgIDwvZGl2PgogICAgICAgIDwhLS0gLy5zaWRlYmFyIC0tPgogICAgPC9hc2lkZT4KCiAgICA8IS0tIENvbnRlbnQgV3JhcHBlci4gQ29udGFpbnMgcGFnZSBjb250ZW50IC0tPgogICAgICAgIEB5aWVsZCgnY29udGVudCcpCiAgICA8IS0tIC8uY29udGVudC13cmFwcGVyIC0tPgogICAgPGZvb3RlciBjbGFzcz0ibWFpbi1mb290ZXIiID4KICAgICAgICA8IS0tIFRvIHRoZSByaWdodCAtLT4KICAgICAgICA8ZGl2IGNsYXNzPSJmbG9hdC1yaWdodCBkLW5vbmUgZC1zbS1pbmxpbmUiPgogICAgICAgICAgINi32LHYp9it24wg2Ygg2KrZiNiz2LnZhyA6IDxhIGhyZWY9Imh0dHBzOi8vYWhtYWRyZXphZ2hhbmJhcmkuaXIiPtin2K3Zhdiv2LHYttinINmC2YbYqNix24w8L2E+CiAgICAgICAgPC9kaXY+CiAgICAgICAgPCEtLSBEZWZhdWx0IHRvIHRoZSBsZWZ0IC0tPgogICAgICAgIDxzdHJvbmc+2KrZhdin2YXbjCDYrdmC2YjZgiDZhdin2K/bjCDZiCDZhdi52YbZiNuMINin24zZhiDYqtin2LHZhtmF2Kcg2KjYsdin24wg2KrbjNmFINmB2YbbjCDYr9qp2KrYsSDYotiy2KfYr9uMINmF2LfZhNmCINmF2K3ZgdmI2Lgg2KfYs9iqPC9zdHJvbmc+CiAgICA8L2Zvb3Rlcj4KCiAgICA8IS0tIENvbnRyb2wgU2lkZWJhciAtLT4KICAgIDxhc2lkZSBjbGFzcz0iY29udHJvbC1zaWRlYmFyIGNvbnRyb2wtc2lkZWJhci1kYXJrIj4KICAgICAgICA8IS0tIENvbnRyb2wgc2lkZWJhciBjb250ZW50IGdvZXMgaGVyZSAtLT4KICAgIDwvYXNpZGU+CiAgICA8IS0tIC8uY29udHJvbC1zaWRlYmFyIC0tPgo8L2Rpdj4KPCEtLSAuL3dyYXBwZXIgLS0+Cgo8IS0tIFJFUVVJUkVEIFNDUklQVFMgLS0+Cgo8IS0tIGpRdWVyeSAtLT4KPHNjcmlwdCBzcmM9Int7VVJMOjp0bygnLycpLicvcGx1Z2lucy9qcXVlcnkvanF1ZXJ5Lm1pbi5qcyd9fSI+PC9zY3JpcHQ+Cgo8IS0tIEJvb3RzdHJhcCA0IC0tPgo8c2NyaXB0IHNyYz0ie3tVUkw6OnRvKCcvJykuJy9wbHVnaW5zL2Jvb3RzdHJhcC9qcy9ib290c3RyYXAuYnVuZGxlLm1pbi5qcyd9fSI+PC9zY3JpcHQ+Cgo8c2NyaXB0IHNyYz0iaHR0cHM6Ly9jZG4uanNkZWxpdnIubmV0L25wbS9zZWxlY3QyQDQuMS4wLWJldGEuMS9kaXN0L2pzL3NlbGVjdDIubWluLmpzIj48L3NjcmlwdD4KPCEtLSBBZG1pbkxURSBBcHAgLS0+CjxzY3JpcHQgc3JjPSJ7e1VSTDo6dG8oJy8nKS4nL2Rpc3QvanMvYWRtaW5sdGUubWluLmpzJ319Ij48L3NjcmlwdD4KCjwhLS0galF1ZXJ5IC0tPgo8c2NyaXB0IHNyYz0ie3tVUkw6OnRvKCcvJykuJy9wbHVnaW5zL2RhdGF0YWJsZXMvanF1ZXJ5LmRhdGFUYWJsZXMubWluLmpzJ319Ij48L3NjcmlwdD4KPHNjcmlwdCBzcmM9Int7VVJMOjp0bygnLycpLicvcGx1Z2lucy9kYXRhdGFibGVzLWJzNC9qcy9kYXRhVGFibGVzLmJvb3RzdHJhcDQubWluLmpzJ319Ij48L3NjcmlwdD4KPHNjcmlwdCBzcmM9Int7VVJMOjp0bygnLycpLicvcGx1Z2lucy9kYXRhdGFibGVzLXJlc3BvbnNpdmUvanMvZGF0YVRhYmxlcy5yZXNwb25zaXZlLm1pbi5qcyd9fSI+PC9zY3JpcHQ+CjxzY3JpcHQgc3JjPSJ7e1VSTDo6dG8oJy8nKS4nL3BsdWdpbnMvZGF0YXRhYmxlcy1yZXNwb25zaXZlL2pzL3Jlc3BvbnNpdmUuYm9vdHN0cmFwNC5taW4uanMnfX0iPjwvc2NyaXB0Pgo8c2NyaXB0PgogICAgJChmdW5jdGlvbiAoKSB7CiAgICAgICQoIiN0YWJsZSIpLkRhdGFUYWJsZSh7CiAgICAgICAgInJlc3BvbnNpdmUiOiB0cnVlLAogICAgICAgICJhdXRvV2lkdGgiOiBmYWxzZSwKICAgICAgICAgICJydGwiIDogdHJ1ZSwKICAgICAgICAgICJsYW5ndWFnZSI6IHsKICAgICAgICAgICAgICAicGFnaW5hdGUiOiB7CiAgICAgICAgICAgICAgICAgICJwcmV2aW91cyI6ICLZgtio2YTbjCIsCiAgICAgICAgICAgICAgICAgICJuZXh0IiA6ICLYqNi52K/bjCIKICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICJzTGVuZ3RoTWVudSI6ICLYqti52K/Yp9ivINix2qnZiNix2K8g2K/YsSDYtdmB2K3ZhyBfTUVOVV8gIiwKICAgICAgICAgICAgICAic1NlYXJjaCIgOiAi2KzYs9iq2KzZiDoiLAogICAgICAgICAgICAgICJlbXB0eVRhYmxlIjogICAgICLZh9uM2oYg2K/Yp9iv2Ycg2KfbjCDYqNix2KfbjCDZhtmF2KfbjNi0INmF2YjYrNmI2K8g2YbbjNiz2KoiLAogICAgICAgICAgICAgICJpbmZvIjogICAgICAgICAgICLZhtmF2KfbjNi0IF9TVEFSVF8g2KrYpyBfRU5EXyDYp9iyIF9UT1RBTF8g2LHaqdmI2LHYryIsCiAgICAgICAgICAgICAgImluZm9FbXB0eSI6ICAgICAgItmG2YXYp9uM2LQgMCDYqtinIDAg2KfYsiAwINix2qnZiNix2K8iLAoKICAgICAgICAgICAgICAiaW5mb0ZpbHRlcmVkIjogICAiKNmG2KrbjNis2Ycg2KzYs9iq2KzZiCDYqNuM2YYgX01BWF8g2LHaqdmI2LHYrykiLAogICAgICAgICAgICAgICJ6ZXJvUmVjb3JkcyI6ICAgICLYp9i32YTYp9i52KfYqtuMINmF2KjZhtuMINio2LEg2KzYs9iq2KzZiCDYtNmF2Kcg2YXZiNis2YjYryDZhtuM2LPYqi4uLiIsCiAgICAgICAgICB9LAoKCgogICAgICB9KTsKICAgIH0pOwogICAgJChmdW5jdGlvbiAoKSB7CiAgICAkKCdbZGF0YS10b2dnbGU9InRvb2x0aXAiXScpLnRvb2x0aXAoKQogIH0pCgogICAgJChkb2N1bWVudCkucmVhZHkoZnVuY3Rpb24oKSB7CiAgICAgICAgJCgnLmpzLWV4YW1wbGUtYmFzaWMtc2luZ2xlJykuc2VsZWN0MigpOwogICAgfSk7CiAgPC9zY3JpcHQ+Cgo8c2NyaXB0IHNyYz0ie3tVUkw6OnRvKCcvJyl9fS9kaXN0L2pzL2RlbW8uanMiPjwvc2NyaXB0Pgo8c2NyaXB0IHNyYz0iaHR0cHM6Ly9jZG4uanNkZWxpdnIubmV0L25wbS9zZWxlY3QyQDQuMS4wLXJjLjAvZGlzdC9qcy9zZWxlY3QyLm1pbi5qcyI+PC9zY3JpcHQ+Cgo8IS0tIFBhZ2Ugc2NyaXB0IC0tPgpAeWllbGQoJ2pzJykKPHNjcmlwdD4KICAgICQoInRleHRhcmVhIikuZWFjaChmdW5jdGlvbigpewogICAgICAgIENLRURJVE9SLnJlcGxhY2UoIHRoaXMgKTsKICAgIH0pOwo8L3NjcmlwdD4KPC9ib2R5Pgo8L2h0bWw+CiI7czo0NToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcRmlsZQBuYW1lc3BhY2VzIjthOjA6e31zOjQzOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlAGluY2x1ZGVzIjthOjA6e31zOjQ0OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlAGZ1bmN0aW9ucyI7YTowOnt9czo0NDoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcRmlsZQBjb25zdGFudHMiO2E6MDp7fXM6NDI6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEZpbGUAY2xhc3NlcyI7YTowOnt9czo0NToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcRmlsZQBpbnRlcmZhY2VzIjthOjA6e31zOjQxOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlAHRyYWl0cyI7YTowOnt9fQ==";